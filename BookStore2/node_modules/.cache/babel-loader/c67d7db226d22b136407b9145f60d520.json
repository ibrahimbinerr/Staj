{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ibrah\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\OpenBook-main\\\\src\\\\Components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport AddBookForm from \"./AddBookForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getRandomBooks = () => {\n  // Placeholder for random books data\n  return [{\n    volumeInfo: {\n      title: \"Book Title 1\",\n      authors: [\"Author 1\"],\n      imageLinks: {\n        smallThumbnail: \"https://via.placeholder.com/150\"\n      },\n      publisher: \"Publisher 1\",\n      publishedDate: \"2023\",\n      description: \"Description 1\"\n    },\n    saleInfo: {\n      listPrice: {\n        amount: 10\n      }\n    }\n  }, {\n    volumeInfo: {\n      title: \"Book Title 2\",\n      authors: [\"Author 2\"],\n      imageLinks: {\n        smallThumbnail: \"https://via.placeholder.com/150\"\n      },\n      publisher: \"Publisher 2\",\n      publishedDate: \"2022\",\n      description: \"Description 2\"\n    },\n    saleInfo: {\n      listPrice: {\n        amount: 15\n      }\n    }\n  } // Add more random books as needed\n  ];\n};\n\nconst Main = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [bookData, setData] = useState(getRandomBooks());\n  const [showForm, setShowForm] = useState(false);\n  useEffect(() => {\n    if (search === \"\") {\n      // Show random books if there's no search query\n      setData(getRandomBooks());\n    }\n  }, [search]);\n\n  const searchBook = evt => {\n    if (evt.key === \"Enter\") {\n      axios.get('https://www.googleapis.com/books/v1/volumes?q=' + search + '&key=AIzaSyA6SaT23KNiiA6DnUfUQTvFeyAcQEkwnSU' + '&maxResults=40').then(res => setData(res.data.items)).catch(err => console.log(err));\n    }\n  };\n\n  const handleAddBook = book => {\n    setData([...bookData, {\n      volumeInfo: {\n        title: book.title,\n        authors: [book.author],\n        imageLinks: {\n          smallThumbnail: book.image\n        },\n        publisher: \"Unknown\",\n        publishedDate: \"Unknown\",\n        description: \"No description available\"\n      },\n      saleInfo: {\n        listPrice: {\n          amount: book.price\n        }\n      }\n    }]);\n    setShowForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row1\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"A room without books is like\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 53\n          }, this), \" a body without a soul.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Find Your Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Your Book Name\",\n            value: search,\n            onChange: e => setSearch(e.target.value),\n            onKeyPress: searchBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-book-button\",\n          onClick: () => setShowForm(!showForm),\n          children: showForm ? \"Cancel\" : \"Add New Book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(AddBookForm, {\n        onAddBook: handleAddBook,\n        onClose: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        book: bookData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"FQQ0RpwHA+VPkaK7jF57a9n6xsc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/ibrah/OneDrive/Masaüstü/OpenBook-main/src/Components/Main.js"],"names":["React","useState","useEffect","Card","axios","AddBookForm","getRandomBooks","volumeInfo","title","authors","imageLinks","smallThumbnail","publisher","publishedDate","description","saleInfo","listPrice","amount","Main","search","setSearch","bookData","setData","showForm","setShowForm","searchBook","evt","key","get","then","res","data","items","catch","err","console","log","handleAddBook","book","author","image","price","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport AddBookForm from \"./AddBookForm\";\n\nconst getRandomBooks = () => {\n    // Placeholder for random books data\n    return [\n        {\n            volumeInfo: {\n                title: \"Book Title 1\",\n                authors: [\"Author 1\"],\n                imageLinks: { smallThumbnail: \"https://via.placeholder.com/150\" },\n                publisher: \"Publisher 1\",\n                publishedDate: \"2023\",\n                description: \"Description 1\"\n            },\n            saleInfo: {\n                listPrice: { amount: 10 }\n            }\n        },\n        {\n            volumeInfo: {\n                title: \"Book Title 2\",\n                authors: [\"Author 2\"],\n                imageLinks: { smallThumbnail: \"https://via.placeholder.com/150\" },\n                publisher: \"Publisher 2\",\n                publishedDate: \"2022\",\n                description: \"Description 2\"\n            },\n            saleInfo: {\n                listPrice: { amount: 15 }\n            }\n        }\n        // Add more random books as needed\n    ];\n};\n\nconst Main = () => {\n    const [search, setSearch] = useState(\"\");\n    const [bookData, setData] = useState(getRandomBooks());\n    const [showForm, setShowForm] = useState(false);\n\n    useEffect(() => {\n        if (search === \"\") {\n            // Show random books if there's no search query\n            setData(getRandomBooks());\n        }\n    }, [search]);\n\n    const searchBook = (evt) => {\n        if (evt.key === \"Enter\") {\n            axios.get('https://www.googleapis.com/books/v1/volumes?q=' + search + '&key=AIzaSyA6SaT23KNiiA6DnUfUQTvFeyAcQEkwnSU' + '&maxResults=40')\n                .then(res => setData(res.data.items))\n                .catch(err => console.log(err));\n        }\n    };\n\n    const handleAddBook = (book) => {\n        setData([...bookData, {\n            volumeInfo: {\n                title: book.title,\n                authors: [book.author],\n                imageLinks: { smallThumbnail: book.image },\n                publisher: \"Unknown\",\n                publishedDate: \"Unknown\",\n                description: \"No description available\"\n            },\n            saleInfo: {\n                listPrice: { amount: book.price }\n            }\n        }]);\n        setShowForm(false);\n    };\n\n    return (\n        <>\n            <div className=\"header\">\n                <div className=\"row1\">\n                    <h1>A room without books is like<br /> a body without a soul.</h1>\n                </div>\n                <div className=\"row2\">\n                    <h2>Find Your Book</h2>\n                    <div className=\"search\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter Your Book Name\"\n                            value={search}\n                            onChange={e => setSearch(e.target.value)}\n                            onKeyPress={searchBook}\n                        />\n                        <button><i className=\"fas fa-search\"></i></button>\n                    </div>\n                    <button className=\"add-book-button\" onClick={() => setShowForm(!showForm)}>\n                        {showForm ? \"Cancel\" : \"Add New Book\"}\n                    </button>\n                </div>\n            </div>\n\n            {/* Conditionally render AddBookForm at the top of the container */}\n            {showForm && (\n                <div className=\"form-container-wrapper\">\n                    <AddBookForm onAddBook={handleAddBook} onClose={() => setShowForm(false)} />\n                </div>\n            )}\n\n            <div className=\"container\">\n                <Card book={bookData} />\n            </div>\n        </>\n    );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}